events {
    worker_connections 1024;
}

http {
    # Rate limiting zones
    limit_conn_zone $binary_remote_addr zone=strict:10m;
    limit_conn_zone $binary_remote_addr zone=normal:10m;
    limit_req_zone $binary_remote_addr zone=index_req:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=other_req:10m rate=50r/s;

    # Security headers (apply globally)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Buffer overflow protection
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    client_max_body_size 1k;
    large_client_header_buffers 2 1k;

    upstream artemis {
        server artemis-frontend:5173;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # SSL Security
        ssl_certificate /etc/ssl/certs/server.crt;
        ssl_certificate_key /etc/ssl/private/server.key;
        ssl_protocols TLSv1.3 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Block requests with no user agent
        if ($http_user_agent = "") {
            return 444;
        }

        # Block common bot patterns
        if ($http_user_agent ~* (curl|wget|python|perl|java)) {
            return 444;
        }

        # INDEX PAGE - STRICT PROTECTION
        location = / {
            limit_conn normal 5;
            limit_req zone=index_req burst=20 nodelay;

            proxy_pass http://artemis;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ALL OTHER PAGES - NORMAL PROTECTION
        location / {
            limit_conn normal 10;
            limit_req zone=other_req burst=50 nodelay;

            proxy_pass http://artemis;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }
}